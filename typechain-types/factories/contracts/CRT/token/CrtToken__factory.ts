/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  CrtToken,
  CrtTokenInterface,
} from "../../../../contracts/CRT/token/CrtToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "EIP712_REVISION",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERMIT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REVISION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280600c81526020017f43726564697420546f6b656e00000000000000000000000000000000000000008152506040518060400160405280600381526020017f435254000000000000000000000000000000000000000000000000000000000081525081600390816200008f9190620003f9565b508060049081620000a19190620003f9565b50505060004690507f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6040518060400160405280600c81526020017f43726564697420546f6b656e0000000000000000000000000000000000000000815250805190602001206040518060400160405280600181526020017f31000000000000000000000000000000000000000000000000000000000000008152508051906020012083306040516020016200015c95949392919062000551565b6040516020818303038152906040528051906020012060068190555050620005ae565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200020157607f821691505b602082108103620002175762000216620001b9565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620002817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000242565b6200028d868362000242565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620002da620002d4620002ce84620002a5565b620002af565b620002a5565b9050919050565b6000819050919050565b620002f683620002b9565b6200030e6200030582620002e1565b8484546200024f565b825550505050565b600090565b6200032562000316565b62000332818484620002eb565b505050565b5b818110156200035a576200034e6000826200031b565b60018101905062000338565b5050565b601f821115620003a95762000373816200021d565b6200037e8462000232565b810160208510156200038e578190505b620003a66200039d8562000232565b83018262000337565b50505b505050565b600082821c905092915050565b6000620003ce60001984600802620003ae565b1980831691505092915050565b6000620003e98383620003bb565b9150826002028217905092915050565b62000404826200017f565b67ffffffffffffffff81111562000420576200041f6200018a565b5b6200042c8254620001e8565b620004398282856200035e565b600060209050601f8311600181146200047157600084156200045c578287015190505b620004688582620003db565b865550620004d8565b601f19841662000481866200021d565b60005b82811015620004ab5784890151825560018201915060208501945060208101905062000484565b86831015620004cb5784890151620004c7601f891682620003bb565b8355505b6001600288020188555050505b505050505050565b6000819050919050565b620004f581620004e0565b82525050565b6200050681620002a5565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000539826200050c565b9050919050565b6200054b816200052c565b82525050565b600060a082019050620005686000830188620004ea565b620005776020830187620004ea565b620005866040830186620004ea565b620005956060830185620004fb565b620005a4608083018462000540565b9695505050505050565b611ab980620005be6000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c806370a08231116100a2578063a9059cbb11610071578063a9059cbb146102d2578063b9844d8d14610302578063d505accf14610332578063dd62ed3e1461034e578063dde43cba1461037e5761010b565b806370a0823114610236578063781603761461026657806395d89b4114610284578063a457c2d7146102a25761010b565b806330adf81f116100de57806330adf81f146101ac578063313ce567146101ca5780633644e515146101e857806339509351146102065761010b565b806306fdde0314610110578063095ea7b31461012e57806318160ddd1461015e57806323b872dd1461017c575b600080fd5b61011861039c565b6040516101259190610f49565b60405180910390f35b61014860048036038101906101439190611004565b61042e565b604051610155919061105f565b60405180910390f35b610166610451565b6040516101739190611089565b60405180910390f35b610196600480360381019061019191906110a4565b61045b565b6040516101a3919061105f565b60405180910390f35b6101b461048a565b6040516101c19190611110565b60405180910390f35b6101d26104ae565b6040516101df9190611147565b60405180910390f35b6101f06104b7565b6040516101fd9190611110565b60405180910390f35b610220600480360381019061021b9190611004565b6104bd565b60405161022d919061105f565b60405180910390f35b610250600480360381019061024b9190611162565b6104f4565b60405161025d9190611089565b60405180910390f35b61026e61053c565b60405161027b91906111e4565b60405180910390f35b61028c610575565b6040516102999190610f49565b60405180910390f35b6102bc60048036038101906102b79190611004565b610607565b6040516102c9919061105f565b60405180910390f35b6102ec60048036038101906102e79190611004565b61067e565b6040516102f9919061105f565b60405180910390f35b61031c60048036038101906103179190611162565b6106a1565b6040516103299190611089565b60405180910390f35b61034c6004803603810190610347919061125e565b6106b9565b005b61036860048036038101906103639190611300565b610950565b6040516103759190611089565b60405180910390f35b6103866109d7565b6040516103939190611089565b60405180910390f35b6060600380546103ab9061136f565b80601f01602080910402602001604051908101604052809291908181526020018280546103d79061136f565b80156104245780601f106103f957610100808354040283529160200191610424565b820191906000526020600020905b81548152906001019060200180831161040757829003601f168201915b5050505050905090565b6000806104396109dc565b90506104468185856109e4565b600191505092915050565b6000600254905090565b6000806104666109dc565b9050610473858285610bad565b61047e858585610c39565b60019150509392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b60006012905090565b60065481565b6000806104c86109dc565b90506104e98185856104da8589610950565b6104e491906113cf565b6109e4565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6040518060400160405280600181526020017f310000000000000000000000000000000000000000000000000000000000000081525081565b6060600480546105849061136f565b80601f01602080910402602001604051908101604052809291908181526020018280546105b09061136f565b80156105fd5780601f106105d2576101008083540402835291602001916105fd565b820191906000526020600020905b8154815290600101906020018083116105e057829003601f168201915b5050505050905090565b6000806106126109dc565b905060006106208286610950565b905083811015610665576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065c90611475565b60405180910390fd5b61067282868684036109e4565b60019250505092915050565b6000806106896109dc565b9050610696818585610c39565b600191505092915050565b60056020528060005260406000206000915090505481565b600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1603610728576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071f906114e1565b60405180910390fd5b8342111561076b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107629061154d565b60405180910390fd5b6000600560008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060006006547f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98a8a8a868b6040516020016107ef9695949392919061157c565b60405160208183030381529060405280519060200120604051602001610816929190611655565b60405160208183030381529060405280519060200120905060018186868660405160008152602001604052604051610851949392919061168c565b6020604051602081039080840390855afa158015610873573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff16146108ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e19061171d565b60405180910390fd5b6001826108f791906113cf565b600560008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506109458989896109e4565b505050505050505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600181565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a53576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4a906117af565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ac2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab990611841565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610ba09190611089565b60405180910390a3505050565b6000610bb98484610950565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610c335781811015610c25576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c1c906118ad565b60405180910390fd5b610c3284848484036109e4565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ca8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c9f9061193f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d17576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d0e906119d1565b60405180910390fd5b610d22838383610eaf565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610da8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d9f90611a63565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610e969190611089565b60405180910390a3610ea9848484610eb4565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ef3578082015181840152602081019050610ed8565b60008484015250505050565b6000601f19601f8301169050919050565b6000610f1b82610eb9565b610f258185610ec4565b9350610f35818560208601610ed5565b610f3e81610eff565b840191505092915050565b60006020820190508181036000830152610f638184610f10565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f9b82610f70565b9050919050565b610fab81610f90565b8114610fb657600080fd5b50565b600081359050610fc881610fa2565b92915050565b6000819050919050565b610fe181610fce565b8114610fec57600080fd5b50565b600081359050610ffe81610fd8565b92915050565b6000806040838503121561101b5761101a610f6b565b5b600061102985828601610fb9565b925050602061103a85828601610fef565b9150509250929050565b60008115159050919050565b61105981611044565b82525050565b60006020820190506110746000830184611050565b92915050565b61108381610fce565b82525050565b600060208201905061109e600083018461107a565b92915050565b6000806000606084860312156110bd576110bc610f6b565b5b60006110cb86828701610fb9565b93505060206110dc86828701610fb9565b92505060406110ed86828701610fef565b9150509250925092565b6000819050919050565b61110a816110f7565b82525050565b60006020820190506111256000830184611101565b92915050565b600060ff82169050919050565b6111418161112b565b82525050565b600060208201905061115c6000830184611138565b92915050565b60006020828403121561117857611177610f6b565b5b600061118684828501610fb9565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60006111b68261118f565b6111c0818561119a565b93506111d0818560208601610ed5565b6111d981610eff565b840191505092915050565b600060208201905081810360008301526111fe81846111ab565b905092915050565b61120f8161112b565b811461121a57600080fd5b50565b60008135905061122c81611206565b92915050565b61123b816110f7565b811461124657600080fd5b50565b60008135905061125881611232565b92915050565b600080600080600080600060e0888a03121561127d5761127c610f6b565b5b600061128b8a828b01610fb9565b975050602061129c8a828b01610fb9565b96505060406112ad8a828b01610fef565b95505060606112be8a828b01610fef565b94505060806112cf8a828b0161121d565b93505060a06112e08a828b01611249565b92505060c06112f18a828b01611249565b91505092959891949750929550565b6000806040838503121561131757611316610f6b565b5b600061132585828601610fb9565b925050602061133685828601610fb9565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061138757607f821691505b60208210810361139a57611399611340565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006113da82610fce565b91506113e583610fce565b92508282019050808211156113fd576113fc6113a0565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b600061145f602583610ec4565b915061146a82611403565b604082019050919050565b6000602082019050818103600083015261148e81611452565b9050919050565b7f494e56414c49445f4f574e455200000000000000000000000000000000000000600082015250565b60006114cb600d83610ec4565b91506114d682611495565b602082019050919050565b600060208201905081810360008301526114fa816114be565b9050919050565b7f494e56414c49445f45585049524154494f4e0000000000000000000000000000600082015250565b6000611537601283610ec4565b915061154282611501565b602082019050919050565b600060208201905081810360008301526115668161152a565b9050919050565b61157681610f90565b82525050565b600060c0820190506115916000830189611101565b61159e602083018861156d565b6115ab604083018761156d565b6115b8606083018661107a565b6115c5608083018561107a565b6115d260a083018461107a565b979650505050505050565b600081905092915050565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b600061161e6002836115dd565b9150611629826115e8565b600282019050919050565b6000819050919050565b61164f61164a826110f7565b611634565b82525050565b600061166082611611565b915061166c828561163e565b60208201915061167c828461163e565b6020820191508190509392505050565b60006080820190506116a16000830187611101565b6116ae6020830186611138565b6116bb6040830185611101565b6116c86060830184611101565b95945050505050565b7f494e56414c49445f5349474e4154555245000000000000000000000000000000600082015250565b6000611707601183610ec4565b9150611712826116d1565b602082019050919050565b60006020820190508181036000830152611736816116fa565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611799602483610ec4565b91506117a48261173d565b604082019050919050565b600060208201905081810360008301526117c88161178c565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b600061182b602283610ec4565b9150611836826117cf565b604082019050919050565b6000602082019050818103600083015261185a8161181e565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000611897601d83610ec4565b91506118a282611861565b602082019050919050565b600060208201905081810360008301526118c68161188a565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000611929602583610ec4565b9150611934826118cd565b604082019050919050565b600060208201905081810360008301526119588161191c565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b60006119bb602383610ec4565b91506119c68261195f565b604082019050919050565b600060208201905081810360008301526119ea816119ae565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b6000611a4d602683610ec4565b9150611a58826119f1565b604082019050919050565b60006020820190508181036000830152611a7c81611a40565b905091905056fea26469706673582212206e3a0096ab43bc146d44190186c126d4c1937e4d435926c1427ed0b563c9120c64736f6c63430008110033";

type CrtTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CrtTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CrtToken__factory extends ContractFactory {
  constructor(...args: CrtTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CrtToken> {
    return super.deploy(overrides || {}) as Promise<CrtToken>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CrtToken {
    return super.attach(address) as CrtToken;
  }
  override connect(signer: Signer): CrtToken__factory {
    return super.connect(signer) as CrtToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CrtTokenInterface {
    return new utils.Interface(_abi) as CrtTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CrtToken {
    return new Contract(address, _abi, signerOrProvider) as CrtToken;
  }
}
